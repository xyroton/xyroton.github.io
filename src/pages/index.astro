---
import BaseLayout from "../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import PostCard from "../components/PostCard.astro";

// Fetch, sort, and format pubDate
const recentPosts = (await getCollection("blog"))
  .sort(
    (a, b) =>
      new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime(),
  )
  .slice(0, 3)
  .map((post) => ({
    ...post,
    formattedDate: new Date(post.data.pubDate).toLocaleDateString("en-US", {
      year: "numeric",
      month: "long",
      day: "numeric",
    }),
  }));
---

<BaseLayout>
  <div class="animate-on-load">
    <!-- Typewriter heading -->
    <h1 id="typedtext" class="typewriter"></h1>

    <div class="bubble">
      <p>
        My blog post is written using the popular web framework
        <a href="https://astro.build/" target="_blank" rel="noopener noreferrer"
          >Astro</a
        >
        and styled with the popular Neovim color theme
        <a
          href="https://github.com/rebelot/kanagawa.nvim"
          target="_blank"
          rel="noopener noreferrer"
          class="default-link">Kanagawa</a
        >
        in the Dragon flavor.
      </p>
    </div>

    <h2 class="underlined-heading">Me</h2>
    <p class="justified">
      I mostly write about AI and related technologies like Machine Learning,
      Natural Language Processing, and Deep Learning — you get the idea.
    </p>
    <p class="justified">
      I'm also a strong proponent of Linux and open-source software, as well as
      developer efficiency and the tools that support it. So don’t be surprised if
      you come across posts about those or general computer science topics as
      well.
    </p>

    <h2 class="underlined-heading">Latest Blog Posts</h2>

    <!-- Render top 3 recent posts -->
    {
      recentPosts.map((post) => (
        <PostCard
          url={`/posts/${post.id}/`}
          title={post.data.title}
          image={post.data.image}
          pubDate={post.formattedDate}
          description={post.data.description}
          tags={post.data.tags}
        />
      ))
    }
  </div>

  <!-- typewriter -->
  <script>
    const aText = [
      "Hi, welcome to Xyroton!",
      "嗨，欢迎来到 Xyroton！",
      "Hallo, willkommen bei Xyroton!",
      "Xyrotonへようこそ！", // Japanese
      "¡Hola, bienvenido a Xyroton!", // spanish
      "Bonjour, bienvenue à Xyroton!", // french
      "Ciao, benvenuto a Xyroton!", // italian
    ];
    const iSpeed = 80;
    const delayBetween = 3000;

    let i = 0;
    let char = 0;
    let typewriterTimeout;

    function typewriter() {
      const element = document.getElementById("typedtext");
      if (!element) return;

      element.innerHTML =
        aText[i].slice(0, char++) + '<span class="blinking-cursor">_</span>';

      if (char <= aText[i].length) {
        typewriterTimeout = setTimeout(typewriter, iSpeed);
      } else {
        typewriterTimeout = setTimeout(() => {
          char = 0;
          i++;
          if (i >= aText.length) i = 0;
          element.innerHTML = "";
          typewriter();
        }, delayBetween);
      }
    }

    function initTypewriter() {
      clearTimeout(typewriterTimeout);
      i = 0;
      char = 0;
      typewriter();
    }

    document.addEventListener("DOMContentLoaded", initTypewriter);
    initTypewriter(); // Also run on initial load
  </script>
</BaseLayout>
