---
import BaseLayout from "./BaseLayout.astro";
import FormattedDate from "../components/FormattedDate.astro";
const { frontmatter } = Astro.props;
---

<BaseLayout pageTitle={frontmatter.title}>
  <div class="blog-post-container">
    <!-- Title should be placed above content -->
    <title>{frontmatter.title}</title>

    <h1 class="post-title">{frontmatter.title}</h1>
    <div class="post-metadata-bubble">
      <div class="text-content">
        <div class="date">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="icon"
          >
            <path d="M8 2v4"></path>
            <path d="M16 2v4"></path>
            <rect width="18" height="18" x="3" y="4" rx="2"></rect>
            <path d="M3 10h18"></path>
            <path d="M8 14h.01"></path>
            <path d="M12 14h.01"></path>
            <path d="M16 14h.01"></path>
            <path d="M8 18h.01"></path>
            <path d="M12 18h.01"></path>
            <path d="M16 18h.01"></path>
          </svg>
          <div class="info-text">
            <FormattedDate date={frontmatter.pubDate} />
          </div>
        </div>
        {
          frontmatter.updatedDate && (
            <div class="date">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon lucide lucide-save-all-icon lucide-save-all"><path d="M10 2v3a1 1 0 0 0 1 1h5"/><path d="M18 18v-6a1 1 0 0 0-1-1h-6a1 1 0 0 0-1 1v6"/><path d="M18 22H4a2 2 0 0 1-2-2V6"/><path d="M8 18a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9.172a2 2 0 0 1 1.414.586l2.828 2.828A2 2 0 0 1 22 6.828V16a2 2 0 0 1-2.01 2z"/></svg>
              <div class="info-text">
                Updated on <FormattedDate date={frontmatter.updatedDate} />
              </div>
            </div>
          )
        }
        <div class="tags-container">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="icon"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="m15 5 6.3 6.3a2.4 2.4 0 0 1 0 3.4L17 19"></path>
            <path
              d="M9.586 5.586A2 2 0 0 0 8.172 5H3a1 1 0 0 0-1 1v5.172a2 2 0 0 0 .586 1.414L8.29 18.29a2.426 2.426 0 0 0 3.42 0l3.58-3.58a2.426 2.426 0 0 0 0-3.42z"
            ></path>
            <circle cx="6.5" cy="9.5" r=".5" fill="currentColor"></circle>
          </svg>
          <div class="info-text">
            {frontmatter.tags.map((tag) => <p>#{tag}</p>)}
          </div>
        </div>
        
      </div>
      <div class="hero-image">
        {
          frontmatter.image.url && (
            <img src={frontmatter.image.url} alt={frontmatter.image.alt} />
          )
        }
      </div>
    </div>

    <!-- Main content of the post -->
    <slot />
  </div>
</BaseLayout>

<style>
  .post-metadata-bubble {
    background-color: var(--buble);
    border-radius: 10px;
    margin-bottom: 1em; /* Decreased margin */
    box-shadow: var(--box-shadow);
    display: flex;
    align-items: center;
    gap: 1em;
  }

  .text-content {
    flex: 1;
    padding: 1em;
    display: flex;
    flex-direction: column;
    color: var(--text-color);
    justify-content: center;
  }

  .icon {
    background-color: var(--mode-button-bg);
    color: var(--background-color);
    border-radius: 7px;
    margin: 10px 10px 10px 0;
    padding: 5px;
    width: 35px;
    height: 35px;
  }

  .info-text {
    color: var(--nav-fg);
    font-size: 1.1rem;
    font-family: "JetBrains Mono";
  }

  .cards {
    display: flex;
    flex-direction: column;
  }

  .date {
    display: inline-flex;
    align-items: center;
  }

  .tags-container {
    display: inline-flex;
    align-items: center;
    gap: 0.5em;
  }

  .tag {
    display: inline-flex; /* inline-flex for horizontal alignment */
    align-items: center; /* vertical center icon and text */
    padding: 2px 6px; /* add some horizontal padding for breathing room */
    margin-right: 0.25em;
    font-size: 0.9em;
    font-family: "JetBrains Mono";
    border: none;
    background-color: var(--mode-button-bg);
    color: var(--background-color);
    border-radius: 5px;
    gap: 0.3em; /* space between icon and text */
  }
  .tag-icon {
    width: 16px;
    height: 16px;
    flex-shrink: 0;
  }
  .hero-image {
    width: 40%;
    padding: 10px;
    border-radius: 20px;
    aspect-ratio: 16 / 9;
    flex-shrink: 0;
    max-width: 300px;
  }

  .hero-image img {
    display: block;
    margin: 0 auto;
    max-width: 100%; /* Ensures the image doesn't exceed the container */
    height: auto; /* Maintains aspect ratio */
    border-radius: 5px;
    box-shadow: var(--box-shadow);
  }

  .dot {
    margin: 0 0.5rem; /* Adds space around the dot */
    color: #777; /* Light grey color */
    font-size: 1.5rem; /* Adjust the size of the dot */
  }

  .prose {
    width: 720px;
    max-width: calc(100% - 2em);
    margin: auto;
    padding: 1em;
    color: rgb(var(--gray-dark));
  }

  .title {
    margin-bottom: 1em;
    padding: 1em 0;
    text-align: center;
    line-height: 1;
  }

  .title h1 {
    margin: 0 0 0.5em 0;
  }
  .date p {
    margin: 0; /* Remove default paragraph margin */
    padding: 0; /* Just in case padding is inherited */
  }

  

  .date {
    margin-top: 0em;
    margin-bottom: 0em;
    padding: 0;
    color: var(--gray-tone);
    align-items: center;
    /* justify-content: center; */
    font-size: 1rem;
    font-family: "JetBrains Mono";
  }

  .last-updated-on {
    font-style: italic;
  }

  a {
    color: #00539f;
  }

  .post-title {
    font-size: 2.5rem; /* Large title */
    font-weight: bold;
    /* text-align: center; */
    margin-bottom: 1rem;
    font-family: "JetBrains Mono";
  }

  .tags {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .tag {
    display: inline-flex; /* inline-flex for horizontal alignment */
    align-items: center; /* vertical center icon and text */
    padding: 2px 6px; /* add some horizontal padding for breathing room */
    margin-right: 0.25em;
    font-size: 0.9em;
    font-family: "JetBrains Mono";
    border: none;
    background-color: var(--mode-button-bg);
    color: var(--background-color);
    border-radius: 5px;
    gap: 0.3em; /* space between icon and text */
  }
  .tag-icon {
    width: 16px;
    height: 16px;
    flex-shrink: 0;
  }

  /* --- Responsive tweaks --- */
  @media (max-width: 600px) {
    .post-metadata-bubble {
      flex-direction: column;
      align-items: flex-start; /* Align content to the left on mobile */
      text-align: left;
    }

    .hero-image {
      width: 100%; /* Make image full width */
      max-width: none; /* Remove max-width constraint */
      height: auto;
      aspect-ratio: auto;
      border-radius: 6px;
      padding: 0;
      order: -1; /* Move image to the top */
    }

    .text-content {
      align-items: flex-start; /* Align text content to the left */
      padding: 1em;
    }
  }
</style>
